basePath: /
definitions:
  types_about_company.AboutOilPayload:
    properties:
      nameEn:
        type: string
      nameRu:
        type: string
      nameUz:
        type: string
      textEn:
        type: string
      textRu:
        type: string
      textUz:
        type: string
    type: object
  types_about_company.CapasityPayload:
    properties:
      nameEn:
        type: string
      nameRu:
        type: string
      nameUz:
        type: string
      quantity:
        type: integer
    type: object
  types_common.ContactCreatePayload:
    properties:
      comment:
        type: string
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
    required:
    - email
    type: object
  types_common.ContactUsFooterPayload:
    properties:
      email:
        type: string
      fullName:
        type: string
      phone:
        type: string
    required:
    - email
    - phone
    type: object
  types_common_admin.CertificatePayload:
    properties:
      nameEn:
        type: string
      nameRu:
        type: string
      nameUz:
        type: string
      textEn:
        type: string
      textRu:
        type: string
      textUz:
        type: string
    type: object
  types_common_admin.ContactUpdatePayload:
    properties:
      isContacted:
        type: boolean
    type: object
  types_common_admin.ContactUsFooterUpdatePayload:
    properties:
      isContacted:
        type: boolean
    type: object
  types_common_admin.SettingsCreatePayload:
    properties:
      addressEn:
        type: string
      addressRu:
        type: string
      addressUz:
        type: string
      email:
        type: string
      facebookUrl:
        type: string
      firstPhone:
        type: string
      instagramUrl:
        type: string
      secondPhone:
        type: string
      telegramUrl:
        type: string
      workingDays:
        type: string
      youtubeUrl:
        type: string
    required:
    - email
    - firstPhone
    - secondPhone
    type: object
  types_common_admin.SettingsUpdatePayload:
    properties:
      addressEn:
        type: string
      addressRu:
        type: string
      addressUz:
        type: string
      email:
        type: string
      facebookUrl:
        type: string
      firstPhone:
        type: string
      instagramUrl:
        type: string
      secondPhone:
        type: string
      telegramUrl:
        type: string
      workingDays:
        type: string
      youtubeUrl:
        type: string
    required:
    - email
    - firstPhone
    - secondPhone
    type: object
  types_user_admin.UserCreatePayload:
    properties:
      firstName:
        type: string
      lastName:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  types_user_admin.UserLoginPayload:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  types_user_admin.UserUpdatePayload:
    properties:
      firstName:
        type: string
      lastName:
        type: string
      username:
        type: string
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server Petstore server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /about_oil/list:
    get:
      consumes:
      - application/json
      description: list about oil
      produces:
      - application/json
      responses: {}
      summary: list about oil
      tags:
      - common
  /admin/common/banner/{bannerId}:
    get:
      consumes:
      - application/json
      description: get banner
      parameters:
      - description: banner id
        in: path
        name: bannerId
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: get banner
      tags:
      - common-admin
  /admin/common/banner/{bannerId}/delete:
    delete:
      consumes:
      - application/json
      description: delete banner
      parameters:
      - description: banner id
        in: path
        name: bannerId
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: delete banner
      tags:
      - common-admin
  /admin/common/banner/{bannerId}/update:
    put:
      consumes:
      - multipart/data
      description: update banner
      parameters:
      - description: banner id
        in: path
        name: bannerId
        required: true
        type: string
      - description: image uz
        in: formData
        name: imageUz
        required: true
        type: file
      - description: image ru
        in: formData
        name: imageRu
        required: true
        type: file
      - description: image en
        in: formData
        name: imageEn
        required: true
        type: file
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: update banner
      tags:
      - common-admin
  /admin/common/banner/create:
    post:
      consumes:
      - multipart/data
      description: create banner
      parameters:
      - description: image uz
        in: formData
        name: imageUz
        required: true
        type: file
      - description: image ru
        in: formData
        name: imageRu
        required: true
        type: file
      - description: image en
        in: formData
        name: imageEn
        required: true
        type: file
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      tags:
      - common-admin
  /admin/common/banner/list:
    get:
      consumes:
      - application/json
      description: list banner
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: list banner
      tags:
      - common-admin
  /admin/common/certificate/{certificateId}:
    get:
      consumes:
      - application/json
      description: get certificate
      parameters:
      - description: certificate id
        in: path
        name: certificateId
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: get certificate
      tags:
      - common-admin
  /admin/common/certificate/{certificateId}/delete:
    delete:
      consumes:
      - application/json
      parameters:
      - description: certificate id
        in: path
        name: certificateId
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: delete certificate
      tags:
      - common-admin
  /admin/common/certificate/{certificateId}/update:
    put:
      consumes:
      - application/json
      description: update certificate
      parameters:
      - description: certificate id
        in: path
        name: certificateId
        required: true
        type: string
      - description: payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/types_common_admin.CertificatePayload'
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: update certificate
      tags:
      - common-admin
  /admin/common/certificate/create:
    post:
      consumes:
      - application/json
      description: create certificate
      parameters:
      - description: payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/types_common_admin.CertificatePayload'
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: create certificate
      tags:
      - common-admin
  /admin/common/certificate/list:
    get:
      consumes:
      - application/json
      description: list certificate
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: list certificate
      tags:
      - common-admin
  /admin/common/contact_us/{contactId}:
    get:
      consumes:
      - application/json
      description: get contact us
      parameters:
      - description: contact Id
        in: path
        name: contactId
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: get contact us
      tags:
      - common-admin
  /admin/common/contact_us/{contactId}/delete:
    delete:
      consumes:
      - application/json
      description: delete contact us
      parameters:
      - description: contact Id
        in: path
        name: contactId
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: delete contact us
      tags:
      - common-admin
  /admin/common/contact_us/{contactId}/update:
    put:
      consumes:
      - application/json
      description: update contact us
      parameters:
      - description: contact Id
        in: path
        name: contactId
        required: true
        type: string
      - description: Update Contact Payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/types_common_admin.ContactUpdatePayload'
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: update contact us
      tags:
      - common-admin
  /admin/common/contact_us/list:
    get:
      consumes:
      - application/json
      description: get contact us
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: get contact us
      tags:
      - common-admin
  /admin/common/contact_us_footer/{contactId}:
    get:
      consumes:
      - application/json
      description: Get contactUs by id
      parameters:
      - description: contact id
        in: path
        name: contactId
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Get contactUs by id
      tags:
      - common-admin
  /admin/common/contact_us_footer/{contactId}/delete:
    delete:
      consumes:
      - application/json
      description: delete contact us
      parameters:
      - description: contact id
        in: path
        name: contactId
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: delete contact us
      tags:
      - common-admin
  /admin/common/contact_us_footer/{contactId}/update:
    put:
      consumes:
      - application/json
      description: update contact us
      parameters:
      - description: contact Id
        in: path
        name: contactId
        required: true
        type: string
      - description: contact us update payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/types_common_admin.ContactUsFooterUpdatePayload'
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: update contact us
      tags:
      - common-admin
  /admin/common/contact_us_footer/list:
    get:
      consumes:
      - application/json
      description: ContactUsFooter list
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: ContactUsFooter list
      tags:
      - common-admin
  /admin/common/media/{mediaId}:
    get:
      consumes:
      - application/json
      description: get media
      parameters:
      - description: media id
        in: path
        name: mediaId
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: get media
      tags:
      - common-admin
  /admin/common/media/{mediaId}/delete:
    delete:
      consumes:
      - application/json
      description: delete media
      parameters:
      - description: media id
        in: path
        name: mediaId
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: delete media
      tags:
      - common-admin
  /admin/common/media/{mediaId}/update:
    put:
      consumes:
      - multipart/data
      description: update media
      parameters:
      - description: media id
        in: path
        name: mediaId
        required: true
        type: string
      - description: file uz
        in: formData
        name: fileUz
        required: true
        type: file
      - description: file ru
        in: formData
        name: fileRu
        type: file
      - description: file en
        in: formData
        name: fileEn
        type: file
      - description: link
        in: formData
        name: link
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: update media
      tags:
      - common-admin
  /admin/common/media/create:
    post:
      consumes:
      - multipart/data
      description: create media
      parameters:
      - description: file uz
        in: formData
        name: fileUz
        required: true
        type: file
      - description: file ru
        in: formData
        name: fileRu
        type: file
      - description: file en
        in: formData
        name: fileEn
        type: file
      - description: link
        in: formData
        name: link
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      tags:
      - common-admin
  /admin/common/media/list:
    get:
      consumes:
      - application/json
      description: get medias
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: get medias
      tags:
      - common-admin
  /admin/common/news/{newsId}:
    get:
      consumes:
      - application/json
      description: get news
      parameters:
      - description: news Id
        in: path
        name: newsId
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: get news
      tags:
      - common-admin
  /admin/common/news/{newsId}/delete:
    delete:
      consumes:
      - application/json
      description: delete news
      parameters:
      - description: news Id
        in: path
        name: newsId
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: delete news
      tags:
      - common-admin
  /admin/common/news/{newsId}/update:
    put:
      consumes:
      - multipart/data
      description: update news
      parameters:
      - description: news Id
        in: path
        name: newsId
        required: true
        type: string
      - description: title uz
        in: formData
        name: titleUz
        required: true
        type: string
      - description: title ru
        in: formData
        name: titleRu
        required: true
        type: string
      - description: title en
        in: formData
        name: titleEn
        required: true
        type: string
      - description: description uz
        in: formData
        name: descriptionUz
        required: true
        type: string
      - description: description ru
        in: formData
        name: descriptionRu
        required: true
        type: string
      - description: description en
        in: formData
        name: descriptionEn
        required: true
        type: string
      - description: image
        in: formData
        name: image
        required: true
        type: file
      - description: link
        in: formData
        name: link
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      tags:
      - common-admin
  /admin/common/news/create:
    post:
      consumes:
      - multipart/data
      description: create news
      parameters:
      - description: title uz
        in: formData
        name: titleUz
        required: true
        type: string
      - description: title ru
        in: formData
        name: titleRu
        required: true
        type: string
      - description: title en
        in: formData
        name: titleEn
        required: true
        type: string
      - description: description uz
        in: formData
        name: descriptionUz
        required: true
        type: string
      - description: description ru
        in: formData
        name: descriptionRu
        required: true
        type: string
      - description: description en
        in: formData
        name: descriptionEn
        required: true
        type: string
      - description: image
        in: formData
        name: image
        required: true
        type: file
      - description: link
        in: formData
        name: link
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      tags:
      - common-admin
  /admin/common/news/list:
    get:
      consumes:
      - application/json
      description: list news
      parameters:
      - description: limit
        in: query
        name: limit
        type: string
      - description: page
        in: query
        name: page
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: list news
      tags:
      - common-admin
  /admin/common/partner/{partnerId}:
    get:
      consumes:
      - application/json
      description: get partner
      parameters:
      - description: partnerId
        in: path
        name: partnerId
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      tags:
      - common-admin
  /admin/common/partner/{partnerId}/delete:
    delete:
      consumes:
      - application/json
      description: delete partner
      parameters:
      - description: partner id
        in: path
        name: partnerId
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: delete partner
      tags:
      - common-admin
  /admin/common/partner/{partnerId}/update:
    put:
      consumes:
      - multipart/json
      description: update partner
      parameters:
      - description: partner id
        in: path
        name: partnerId
        required: true
        type: string
      - description: image
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      tags:
      - common-admin
  /admin/common/partner/create:
    post:
      consumes:
      - multipart/data
      description: create partner
      parameters:
      - description: image
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: create partner
      tags:
      - common-admin
  /admin/common/partner/list:
    get:
      consumes:
      - application/json
      description: list partners
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: list partners
      tags:
      - common-admin
  /admin/common/settings/{settingsId}:
    get:
      consumes:
      - application/json
      description: settings get with setting id
      parameters:
      - description: settings Id
        in: path
        name: settingsId
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: settings get
      tags:
      - common-admin
  /admin/common/settings/{settingsId}/update:
    put:
      consumes:
      - application/json
      description: settings update by id
      parameters:
      - description: settings Id
        in: path
        name: settingsId
        required: true
        type: string
      - description: settings update payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/types_common_admin.SettingsUpdatePayload'
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: settings update
      tags:
      - common-admin
  /admin/common/settings/create:
    post:
      consumes:
      - application/json
      description: create settings
      parameters:
      - description: Create Settings Payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/types_common_admin.SettingsCreatePayload'
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: create settings
      tags:
      - common-admin
  /admin/common/settings/list:
    get:
      consumes:
      - application/json
      description: get settings
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: get settings
      tags:
      - common-admin
  /admin/company/about_oil/{oilId}:
    get:
      consumes:
      - application/json
      description: get about oil
      parameters:
      - description: id
        in: path
        name: oilId
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: get about oil
      tags:
      - company-admin
  /admin/company/about_oil/{oilId}/delete:
    delete:
      consumes:
      - application/json
      description: delete about oil
      parameters:
      - description: id
        in: path
        name: oilId
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: delete about oil
      tags:
      - company-admin
  /admin/company/about_oil/{oilId}/update:
    put:
      consumes:
      - application/json
      description: update about oil
      parameters:
      - description: id
        in: path
        name: oilId
        required: true
        type: string
      - description: payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/types_about_company.AboutOilPayload'
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: update about oil
      tags:
      - company-admin
  /admin/company/about_oil/create:
    post:
      consumes:
      - application/json
      description: create about oil
      parameters:
      - description: payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/types_about_company.AboutOilPayload'
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: h=create about oil
      tags:
      - company-admin
  /admin/company/about_oil/list:
    get:
      consumes:
      - application/json
      description: about oil
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: list about oil
      tags:
      - company-admin
  /admin/company/capasity/{capasityId}:
    get:
      consumes:
      - application/json
      description: get capasity
      parameters:
      - description: capasity id
        in: path
        name: capasityId
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: get capasity
      tags:
      - company-admin
  /admin/company/capasity/{capasityId}/delete:
    delete:
      consumes:
      - application/json
      description: delete capasity
      parameters:
      - description: capasity id
        in: path
        name: capasityId
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: delete capasity
      tags:
      - company-admin
  /admin/company/capasity/{capasityId}/update:
    put:
      consumes:
      - application/json
      description: update capasity
      parameters:
      - description: capasity id
        in: path
        name: capasityId
        required: true
        type: string
      - description: update capasity payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/types_about_company.CapasityPayload'
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: update capasity
      tags:
      - company-admin
  /admin/company/capasity/create:
    post:
      consumes:
      - application/json
      description: create capasity
      parameters:
      - description: payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/types_about_company.CapasityPayload'
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: create capasity
      tags:
      - company-admin
  /admin/company/capasity/list:
    get:
      consumes:
      - application/json
      description: list capasity
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: list capasity
      tags:
      - company-admin
  /admin/product/category/{categoryId}:
    get:
      description: get category
      parameters:
      - description: category id
        in: path
        name: categoryId
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: get category
      tags:
      - product-admin
  /admin/product/category/{categoryId}/delete:
    delete:
      consumes:
      - application/json
      description: delete category
      parameters:
      - description: category id
        in: path
        name: categoryId
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: delete category
      tags:
      - product-admin
  /admin/product/category/create:
    post:
      consumes:
      - multipart/data
      description: create category
      parameters:
      - description: name uz
        in: formData
        name: nameUz
        required: true
        type: string
      - description: name ru
        in: formData
        name: nameRu
        required: true
        type: string
      - description: name en
        in: formData
        name: nameEn
        required: true
        type: string
      - description: image
        in: formData
        name: image
        required: true
        type: file
      - description: icon
        in: formData
        name: icon
        required: true
        type: file
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: create category
      tags:
      - product-admin
  /admin/product/category/list:
    get:
      consumes:
      - application/json
      description: list category
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: list category
      tags:
      - product-admin
  /admin/product/crategory/{categoryId}/update:
    put:
      consumes:
      - multipart/data
      parameters:
      - description: category id
        in: path
        name: categoryId
        required: true
        type: string
      - description: name uz
        in: formData
        name: nameUz
        required: true
        type: string
      - description: name ru
        in: formData
        name: nameRu
        required: true
        type: string
      - description: name en
        in: formData
        name: nameEn
        required: true
        type: string
      - description: image
        in: formData
        name: image
        required: true
        type: file
      - description: icon
        in: formData
        name: icon
        required: true
        type: file
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: update category
      tags:
      - product-admin
  /banner/list:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses: {}
      tags:
      - common
  /category/list:
    get:
      consumes:
      - application/json
      description: list category
      produces:
      - application/json
      responses: {}
      summary: list category
      tags:
      - common
  /certificate/list:
    get:
      consumes:
      - application/json
      description: list certificate
      produces:
      - application/json
      responses: {}
      summary: list certificate
      tags:
      - common
  /contact_us/create:
    post:
      consumes:
      - application/json
      description: create contact us
      parameters:
      - description: Contact Us Payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/types_common.ContactCreatePayload'
      produces:
      - application/json
      responses: {}
      summary: create contact us
      tags:
      - common
  /contact_us_footer/create:
    post:
      consumes:
      - application/json
      description: create contact footer
      parameters:
      - description: contact us footer create payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/types_common.ContactUsFooterPayload'
      produces:
      - application/json
      responses: {}
      summary: create contact footer
      tags:
      - common
  /media/list:
    get:
      consumes:
      - application/json
      description: get all media
      produces:
      - application/json
      responses: {}
      summary: get all media
      tags:
      - common
  /news/{newsId}:
    get:
      consumes:
      - application/json
      description: get news
      parameters:
      - description: news Id
        in: path
        name: newsId
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: get news
      tags:
      - common
  /news/list:
    get:
      consumes:
      - application/json
      description: list news
      parameters:
      - description: limit
        in: query
        name: limit
        type: string
      - description: page
        in: query
        name: page
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: list news
      tags:
      - common
  /partner/list:
    get:
      consumes:
      - application/json
      description: list partner
      produces:
      - application/json
      responses: {}
      summary: list partner
      tags:
      - common
  /settings:
    get:
      consumes:
      - application/json
      description: get settings list
      produces:
      - application/json
      responses: {}
      summary: get settings
      tags:
      - common
  /user/create:
    post:
      consumes:
      - application/json
      description: Create User
      parameters:
      - description: user create payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/types_user_admin.UserCreatePayload'
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Create User
      tags:
      - user-admin
  /user/delete/{userId}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: user Id
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Delete user
      tags:
      - user-admin
  /user/detail/{userId}:
    get:
      consumes:
      - application/json
      parameters:
      - description: user Id
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Get user
      tags:
      - user-admin
  /user/list:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: List users
      tags:
      - user-admin
  /user/login:
    post:
      consumes:
      - application/json
      description: Login a user with username and password
      parameters:
      - description: Login User Payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/types_user_admin.UserLoginPayload'
      produces:
      - application/json
      responses: {}
      summary: Login a user
      tags:
      - user-admin
  /user/profile:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Get user profile
      tags:
      - user-admin
  /user/update/{userId}:
    put:
      consumes:
      - application/json
      parameters:
      - description: user Id
        in: path
        name: userId
        required: true
        type: string
      - description: Update User Payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/types_user_admin.UserUpdatePayload'
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Update user
      tags:
      - user-admin
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
